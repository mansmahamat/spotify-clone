{"ast":null,"code":"var _jsxFileName = \"/Users/mansour/Desktop/Perso/spotify-clone/client/src/Player.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport SpotifyPlayer from \"react-spotify-web-playback\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Player({\n  accessToken,\n  trackUri\n}) {\n  _s();\n\n  const [play, setPlay] = useState(false);\n  useEffect(() => {}, [input]);\n  if (!accessToken) return null;\n  return /*#__PURE__*/_jsxDEV(SpotifyPlayer, {\n    token: accessToken,\n    showSaveIcon: true,\n    play: true,\n    uris: trackUri ? [trackUri] : []\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Player, \"jVhLcXDeOrLi5A95zDr62ndrz9E=\");\n\n_c = Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["/Users/mansour/Desktop/Perso/spotify-clone/client/src/Player.js"],"names":["React","useState","SpotifyPlayer","Player","accessToken","trackUri","play","setPlay","useEffect","input"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,aAAP,MAA0B,4BAA1B;;AAEA,eAAe,SAASC,MAAT,CAAgB;AAAEC,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAhB,EAA2C;AAAA;;AAEtD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,KAAD,CAAhC;AAEAO,EAAAA,SAAS,CAAC,MAAM,CAEf,CAFQ,EAEN,CAACC,KAAD,CAFM,CAAT;AAIF,MAAI,CAACL,WAAL,EAAkB,OAAO,IAAP;AAClB,sBACE,QAAC,aAAD;AACE,IAAA,KAAK,EAAEA,WADT;AAEE,IAAA,YAAY,MAFd;AAGE,IAAA,IAAI,EAAE,IAHR;AAIE,IAAA,IAAI,EAAEC,QAAQ,GAAG,CAACA,QAAD,CAAH,GAAgB;AAJhC;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAjBuBF,M;;KAAAA,M","sourcesContent":["import React, {useState} from \"react\";\nimport SpotifyPlayer from \"react-spotify-web-playback\";\n\nexport default function Player({ accessToken, trackUri }) {\n\n    const [play, setPlay] = useState(false)\n\n    useEffect(() => {\n        \n    }, [input])\n\n  if (!accessToken) return null;\n  return (\n    <SpotifyPlayer\n      token={accessToken}\n      showSaveIcon\n      play={true}\n      uris={trackUri ? [trackUri] : []}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}