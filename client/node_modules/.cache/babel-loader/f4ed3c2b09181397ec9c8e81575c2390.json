{"ast":null,"code":"var _jsxFileName = \"/Users/mansour/Desktop/Perso/spotify-clone/client/src/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport TrackSearchResults from \"./TrackSearchResults\";\nimport SpotifyWebApi from \"spotify-web-api-node\";\nimport \"./Dashboard.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dashboard({\n  accessToken,\n  setUser,\n  code,\n  searchResults,\n  chooseTrack,\n  search,\n  setSearch,\n  setSearchResults\n}) {\n  _s();\n\n  const spotifyApi = new SpotifyWebApi({\n    clientId: \"39c957640b2940bc9b1ca9322bf20062\"\n  });\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.setAccessToken(accessToken);\n    spotifyApi.getMe().then(function (data) {\n      console.log(\"Some information about the authenticated user\", data.body);\n      setUser(data.body);\n    }, function (err) {\n      console.log(\"Something went wrong!\", err);\n    });\n    spotifyApi.getFeaturedPlaylists({\n      limit: 20,\n      offset: 1,\n      country: \"FR\",\n      locale: \"fr_FR\",\n      timestamp: \"2014-10-23T09:00:00\"\n    }).then(function (data) {\n      console.log(data.body);\n    }, function (err) {\n      console.log(\"Something went wrong!\", err);\n    });\n  }, [accessToken]);\n  useEffect(() => {\n    if (!search) return setSearchResults([]);\n    if (!accessToken) return;\n    let cancel = false;\n    spotifyApi.searchTracks(search).then(res => {\n      if (cancel) return;\n      setSearchResults(res.body.tracks.items.map(track => {\n        const smallestAlbumImage = track.album.images.reduce((smallest, image) => {\n          if (image.height < smallest.height) return image;\n          return smallest;\n        }, track.album.images[0]);\n        return {\n          artist: track.artists[0].name,\n          title: track.name,\n          uri: track.uri,\n          albumUrl: smallestAlbumImage.url,\n          bigAlbumImage: track.album.images[0].url\n        };\n      }));\n    });\n    return () => cancel = true;\n  }, [search, accessToken]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      method: \"get\",\n      className: \"form-example\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-example\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Enter your name: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\",\n          placeholder: \"search\",\n          value: search,\n          onChange: e => setSearch(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: searchResults.map(track => /*#__PURE__*/_jsxDEV(TrackSearchResults, {\n        track: track,\n        chooseTrack: chooseTrack\n      }, track.uri, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Dashboard, \"3ubReDTFssvu4DHeldAg55cW/CI=\");\n\n_c = Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/mansour/Desktop/Perso/spotify-clone/client/src/Dashboard.js"],"names":["React","useState","useEffect","TrackSearchResults","SpotifyWebApi","Dashboard","accessToken","setUser","code","searchResults","chooseTrack","search","setSearch","setSearchResults","spotifyApi","clientId","setAccessToken","getMe","then","data","console","log","body","err","getFeaturedPlaylists","limit","offset","country","locale","timestamp","cancel","searchTracks","res","tracks","items","map","track","smallestAlbumImage","album","images","reduce","smallest","image","height","artist","artists","name","title","uri","albumUrl","url","bigAlbumImage","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport TrackSearchResults from \"./TrackSearchResults\";\n\nimport SpotifyWebApi from \"spotify-web-api-node\";\n\nimport \"./Dashboard.scss\";\n\nexport default function Dashboard({\n  accessToken,\n  setUser,\n  code,\n  searchResults,\n  chooseTrack,\n  search,\n  setSearch,\n  setSearchResults\n}) {\n  const spotifyApi = new SpotifyWebApi({\n    clientId: \"39c957640b2940bc9b1ca9322bf20062\",\n  });\n\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.setAccessToken(accessToken);\n\n    spotifyApi.getMe().then(\n      function (data) {\n        console.log(\"Some information about the authenticated user\", data.body);\n        setUser(data.body);\n      },\n      function (err) {\n        console.log(\"Something went wrong!\", err);\n      }\n    );\n\n    spotifyApi\n      .getFeaturedPlaylists({\n        limit: 20,\n        offset: 1,\n        country: \"FR\",\n        locale: \"fr_FR\",\n        timestamp: \"2014-10-23T09:00:00\",\n      })\n      .then(\n        function (data) {\n          console.log(data.body);\n        },\n        function (err) {\n          console.log(\"Something went wrong!\", err);\n        }\n      );\n  }, [accessToken]);\n\n  useEffect(() => {\n    if (!search) return setSearchResults([]);\n    if (!accessToken) return;\n\n    let cancel = false;\n    spotifyApi.searchTracks(search).then((res) => {\n      if (cancel) return;\n      setSearchResults(\n        res.body.tracks.items.map((track) => {\n          const smallestAlbumImage = track.album.images.reduce(\n            (smallest, image) => {\n              if (image.height < smallest.height) return image;\n              return smallest;\n            },\n            track.album.images[0]\n          );\n          return {\n            artist: track.artists[0].name,\n            title: track.name,\n            uri: track.uri,\n            albumUrl: smallestAlbumImage.url,\n            bigAlbumImage: track.album.images[0].url,\n          };\n        })\n      );\n    });\n    return () => (cancel = true);\n  }, [search, accessToken]);\n\n  return (\n    <div className=\"app\">\n      <form action=\"\" method=\"get\" className=\"form-example\">\n        <div className=\"form-example\">\n          <label>Enter your name: </label>\n          <input\n            type=\"search\"\n            placeholder=\"search\"\n            value={search}\n            onChange={(e) => setSearch(e.target.value)}\n          />\n        </div>\n      </form>\n\n      <div>\n        {searchResults.map((track) => (\n          <TrackSearchResults\n            track={track}\n            chooseTrack={chooseTrack}\n            key={track.uri}\n          />\n        ))}\n      </div>\n      <div></div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}