{"ast":null,"code":"var _jsxFileName = \"/Users/mansour/Desktop/Perso/spotify-clone/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Dashboard from \"./Dashboard\";\nimport Login from \"./Login\";\nimport Player from './Player';\nimport Header from './Header';\nimport useAuth from './useAuth';\nimport SpotifyWebApi from 'spotify-web-api-node';\nimport \"./App.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst code = new URLSearchParams(window.location.search).get(\"code\");\nconst spotifyApi = new SpotifyWebApi({\n  clientId: '39c957640b2940bc9b1ca9322bf20062'\n});\n\nfunction App() {\n  _s();\n\n  const [search, setSearch] = useState('');\n  const [user, setUser] = useState();\n  const [searchResults, setSearchResults] = useState([]);\n  const [playingTrack, setPlayingTrack] = useState();\n  const accessToken = useAuth(code);\n\n  function chooseTrack(track) {\n    setPlayingTrack(track);\n    setSearch('');\n  }\n\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.setAccessToken(accessToken);\n    spotifyApi.getMe().then(function (data) {\n      console.log('Some information about the authenticated user', data.body);\n      setUser(data.body);\n    }, function (err) {\n      console.log('Something went wrong!', err);\n    });\n    spotifyApi.getFeaturedPlaylists({\n      limit: 20,\n      offset: 1,\n      country: 'FR',\n      locale: 'fr_FR',\n      timestamp: '2014-10-23T09:00:00'\n    }).then(function (data) {\n      console.log(data.body);\n    }, function (err) {\n      console.log(\"Something went wrong!\", err);\n    });\n  }, [accessToken]);\n  useEffect(() => {\n    if (!search) return setSearchResults([]);\n    if (!accessToken) return;\n    let cancel = false;\n    spotifyApi.searchTracks(search).then(res => {\n      if (cancel) return;\n      setSearchResults(res.body.tracks.items.map(track => {\n        const smallestAlbumImage = track.album.images.reduce((smallest, image) => {\n          if (image.height < smallest.height) return image;\n          return smallest;\n        }, track.album.images[0]);\n        return {\n          artist: track.artists[0].name,\n          title: track.name,\n          uri: track.uri,\n          albumUrl: smallestAlbumImage.url,\n          bigAlbumImage: track.album.images[0].url\n        };\n      }));\n    });\n    return () => cancel = true;\n  }, [search, accessToken]);\n  return code ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dashboard, {\n      setSearch: setSearch,\n      search: search,\n      chooseTrack: chooseTrack,\n      searchResults: searchResults,\n      code: code\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(Player, {\n      accessToken: accessToken,\n      trackUri: playingTrack === null || playingTrack === void 0 ? void 0 : playingTrack.uri\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"malFsGaGDVPPOcnBEkwXuzcgGtI=\", false, function () {\n  return [useAuth];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/mansour/Desktop/Perso/spotify-clone/client/src/App.js"],"names":["React","useState","useEffect","Dashboard","Login","Player","Header","useAuth","SpotifyWebApi","code","URLSearchParams","window","location","search","get","spotifyApi","clientId","App","setSearch","user","setUser","searchResults","setSearchResults","playingTrack","setPlayingTrack","accessToken","chooseTrack","track","setAccessToken","getMe","then","data","console","log","body","err","getFeaturedPlaylists","limit","offset","country","locale","timestamp","cancel","searchTracks","res","tracks","items","map","smallestAlbumImage","album","images","reduce","smallest","image","height","artist","artists","name","title","uri","albumUrl","url","bigAlbumImage"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport Dashboard from \"./Dashboard\";\nimport Login from \"./Login\";\nimport Player from './Player';\nimport Header from './Header';\nimport useAuth from './useAuth'\nimport SpotifyWebApi from 'spotify-web-api-node'\n\nimport \"./App.scss\";\n\nconst code = new URLSearchParams(window.location.search).get(\"code\");\nconst spotifyApi = new SpotifyWebApi({\n  clientId: '39c957640b2940bc9b1ca9322bf20062'\n})\n\nfunction App() {\n\nconst [search, setSearch] = useState('')\n    const [user, setUser] = useState()\n    const [searchResults, setSearchResults] = useState([])\n    const [playingTrack, setPlayingTrack] = useState()\n    const accessToken = useAuth(code)\n\n    function chooseTrack(track) {\n        setPlayingTrack(track)\n        setSearch('')\n    }\n\n\n\n    useEffect(() => {\n        if (!accessToken) return\n        spotifyApi.setAccessToken(accessToken);\n\n        spotifyApi.getMe()\n  .then(function(data) {\n    console.log('Some information about the authenticated user', data.body);\n    setUser(data.body)\n  }, function(err) {\n    console.log('Something went wrong!', err);\n  });\n\n  spotifyApi.getFeaturedPlaylists({ limit : 20, offset: 1, country: 'FR', locale: 'fr_FR', timestamp:'2014-10-23T09:00:00' })\n  .then(function(data) {\n    console.log(data.body);\n  }, function(err) {\n    console.log(\"Something went wrong!\", err);\n  });\n\n\n    }, [accessToken])\n\n    useEffect(() => {\n        if(!search) return setSearchResults([])\n        if(!accessToken) return\n\n        let cancel = false\n        spotifyApi.searchTracks(search).then((res) =>{\n            if (cancel) return\n            setSearchResults(res.body.tracks.items.map(track => {\n                const smallestAlbumImage = track.album.images.reduce(\n                    (smallest, image) => {\n                      if (image.height < smallest.height) return image\n                      return smallest\n                    },\n                    track.album.images[0])\n                return {\n                    artist: track.artists[0].name,\n                    title: track.name,\n                    uri: track.uri,\n                    albumUrl: smallestAlbumImage.url,\n                    bigAlbumImage: track.album.images[0].url\n                }\n            }))\n        })\n        return () => cancel = true\n    }, [search, accessToken])\n\n    \n  return code ? (\n    <div className=\"wrapper\">\n      <Header user={user} />\n      <Dashboard setSearch={setSearch} search={search} chooseTrack={chooseTrack} searchResults={searchResults} code={code} />{\" \"}\n      <Player  accessToken={accessToken} trackUri={playingTrack?.uri} />\n    </div>\n  ) : (\n    <div className=\"wrapper\">\n      <Login />\n    </div>\n  );\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}