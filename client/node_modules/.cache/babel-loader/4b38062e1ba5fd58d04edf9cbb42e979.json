{"ast":null,"code":"var _jsxFileName = \"/Users/mansour/Desktop/Perso/spotify-clone/client/src/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport useAuth from './useAuth';\nimport SpotifyWebApi from 'spotify-web-api-node';\nimport TrackSearchResults from './TrackSearchResults';\nimport Player from './Player';\nimport Header from './Header';\nimport './Dashboard.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst spotifyApi = new SpotifyWebApi({\n  clientId: '39c957640b2940bc9b1ca9322bf20062'\n});\nexport default function Dashboard({\n  code\n}) {\n  _s();\n\n  const [search, setSearch] = useState('');\n  const [user, setUser] = useState();\n  const [searchResults, setSearchResults] = useState([]);\n  const [initialResults, setInitialResults] = useState([]);\n  const [playingTrack, setPlayingTrack] = useState();\n  const accessToken = useAuth(code);\n\n  function chooseTrack(track) {\n    setPlayingTrack(track);\n    setSearch('');\n  }\n\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.setAccessToken(accessToken);\n    spotifyApi.getMe().then(function (data) {\n      console.log('Some information about the authenticated user', data.body);\n      setUser(data.body);\n    }, function (err) {\n      console.log('Something went wrong!', err);\n    });\n    spotifyApi.searchTracks('Relax').then(res => {\n      setInitialResults(res.body.tracks.items.map(track => {\n        const smallestAlbumImage = track.album.images.reduce((smallest, image) => {\n          if (image.height < smallest.height) return image;\n          return smallest;\n        }, track.album.images[0]);\n        return {\n          artist: track.artists[0].name,\n          title: track.name,\n          uri: track.uri,\n          albumUrl: smallestAlbumImage.url,\n          bigAlbumImage: track.album.images[0].url\n        };\n      }));\n    }, function (err) {\n      console.error(err);\n    });\n  }, [accessToken]);\n  useEffect(() => {\n    if (!search) return setSearchResults([]);\n    if (!accessToken) return;\n    let cancel = false;\n    spotifyApi.searchTracks(search).then(res => {\n      if (cancel) return;\n      setSearchResults(res.body.tracks.items.map(track => {\n        const smallestAlbumImage = track.album.images.reduce((smallest, image) => {\n          if (image.height < smallest.height) return image;\n          return smallest;\n        }, track.album.images[0]);\n        return {\n          artist: track.artists[0].name,\n          title: track.name,\n          uri: track.uri,\n          albumUrl: smallestAlbumImage.url,\n          bigAlbumImage: track.album.images[0].url\n        };\n      }));\n    });\n    return () => cancel = true;\n  }, [search, accessToken]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard__container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Header, {\n          search: search,\n          setSearch: setSearch,\n          user: user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cardsWrap\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cardsWrapInner\",\n          children: [searchResults.map(track => /*#__PURE__*/_jsxDEV(TrackSearchResults, {\n            accessToken: accessToken,\n            spotifyApi: spotifyApi,\n            searchResults: searchResults,\n            track: track,\n            user: user,\n            chooseTrack: chooseTrack\n          }, track.uri, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 9\n          }, this)), searchResults.length === 0 && initialResults.map(track => /*#__PURE__*/_jsxDEV(TrackSearchResults, {\n            accessToken: accessToken,\n            spotifyApi: spotifyApi,\n            searchResults: searchResults,\n            track: track,\n            user: user,\n            chooseTrack: chooseTrack\n          }, track.uri, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 9\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Player, {\n      accessToken: accessToken,\n      trackUri: playingTrack === null || playingTrack === void 0 ? void 0 : playingTrack.uri\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Dashboard, \"8ONXmoPDyrtM5zzH01wlr98uf8I=\", false, function () {\n  return [useAuth];\n});\n\n_c = Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/mansour/Desktop/Perso/spotify-clone/client/src/Dashboard.js"],"names":["React","useState","useEffect","useAuth","SpotifyWebApi","TrackSearchResults","Player","Header","spotifyApi","clientId","Dashboard","code","search","setSearch","user","setUser","searchResults","setSearchResults","initialResults","setInitialResults","playingTrack","setPlayingTrack","accessToken","chooseTrack","track","setAccessToken","getMe","then","data","console","log","body","err","searchTracks","res","tracks","items","map","smallestAlbumImage","album","images","reduce","smallest","image","height","artist","artists","name","title","uri","albumUrl","url","bigAlbumImage","error","cancel","length"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport useAuth from './useAuth'\nimport SpotifyWebApi from 'spotify-web-api-node'\nimport TrackSearchResults from './TrackSearchResults';\nimport Player from './Player';\nimport Header from './Header';\n\nimport './Dashboard.scss'\n\n\nconst spotifyApi = new SpotifyWebApi({\n    clientId: '39c957640b2940bc9b1ca9322bf20062'\n})\n\n\nexport default function Dashboard({code}) {\n\n    const [search, setSearch] = useState('')\n    const [user, setUser] = useState()\n    const [searchResults, setSearchResults] = useState([])\n    const [initialResults, setInitialResults] = useState([])\n    const [playingTrack, setPlayingTrack] = useState()\n    const accessToken = useAuth(code)\n\n    function chooseTrack(track) {\n        setPlayingTrack(track)\n        setSearch('')\n    }\n\n\n\n    useEffect(() => {\n        if (!accessToken) return\n        spotifyApi.setAccessToken(accessToken);\n\n        spotifyApi.getMe()\n  .then(function(data) {\n    console.log('Some information about the authenticated user', data.body);\n    setUser(data.body)\n  }, function(err) {\n    console.log('Something went wrong!', err);\n  });\n\n  spotifyApi.searchTracks('Relax')\n  .then((res) => {\n    setInitialResults(res.body.tracks.items.map(track => {\n      const smallestAlbumImage = track.album.images.reduce(\n          (smallest, image) => {\n            if (image.height < smallest.height) return image\n            return smallest\n          },\n          track.album.images[0])\n      return {\n          artist: track.artists[0].name,\n          title: track.name,\n          uri: track.uri,\n          albumUrl: smallestAlbumImage.url,\n          bigAlbumImage: track.album.images[0].url\n      }\n  }))\n  }, function(err) {\n    console.error(err);\n  });\n\n\n    }, [accessToken])\n\n    useEffect(() => {\n        if(!search) return setSearchResults([])\n        if(!accessToken) return\n\n        let cancel = false\n        spotifyApi.searchTracks(search).then((res) =>{\n            if (cancel) return\n            setSearchResults(res.body.tracks.items.map(track => {\n                const smallestAlbumImage = track.album.images.reduce(\n                    (smallest, image) => {\n                      if (image.height < smallest.height) return image\n                      return smallest\n                    },\n                    track.album.images[0])\n                return {\n                    artist: track.artists[0].name,\n                    title: track.name,\n                    uri: track.uri,\n                    albumUrl: smallestAlbumImage.url,\n                    bigAlbumImage: track.album.images[0].url\n                }\n            }))\n        })\n        return () => cancel = true\n    }, [search, accessToken])\n\n    return (\n        <div className=\"dashboard__container\">\n          <div className=\"dashboard\">\n<div>\n                <Header search={search} setSearch={setSearch} user={user} />\n            </div>\n\n            \n        \n\n            <div className=\"cardsWrap\">\n      <div className=\"cardsWrapInner\" >\n     {searchResults.map(track => (\n        <TrackSearchResults accessToken={accessToken} spotifyApi={spotifyApi} searchResults={searchResults} track={track} user={user} chooseTrack={chooseTrack} key={track.uri} />\n    ))} \n\n    {searchResults.length === 0 && initialResults.map(track => (\n        <TrackSearchResults accessToken={accessToken} spotifyApi={spotifyApi} searchResults={searchResults} track={track} user={user} chooseTrack={chooseTrack} key={track.uri} />\n    )) }\n\n    </div>\n    </div>\n          </div>\n            \n\n       <Player  accessToken={accessToken} trackUri={playingTrack?.uri} />\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}