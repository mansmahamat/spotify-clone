{"ast":null,"code":"var _jsxFileName = \"/Users/mansour/Desktop/Perso/spotify-clone/client/src/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport useAuth from './useAuth';\nimport SpotifyWebApi from 'spotify-web-api-node';\nimport TrackSearchResults from './TrackSearchResults';\nimport Player from './Player';\nimport Header from './Header';\nimport './Dashboard.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst spotifyApi = new SpotifyWebApi({\n  clientId: '39c957640b2940bc9b1ca9322bf20062'\n});\nexport default function Dashboard({\n  code,\n  ok,\n  search,\n  setSearch\n}) {\n  _s();\n\n  const [user, setUser] = useState();\n  const [searchResults, setSearchResults] = useState([]);\n  const accessToken = useAuth(code);\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.setAccessToken(accessToken);\n    spotifyApi.getMe().then(function (data) {\n      console.log('Some information about the authenticated user', data.body);\n      setUser(data.body);\n    }, function (err) {\n      console.log('Something went wrong!', err);\n    });\n    spotifyApi.getFeaturedPlaylists({\n      limit: 20,\n      offset: 1,\n      country: 'FR',\n      locale: 'fr_FR',\n      timestamp: '2014-10-23T09:00:00'\n    }).then(function (data) {\n      console.log(data.body);\n    }, function (err) {\n      console.log(\"Something went wrong!\", err);\n    });\n  }, [accessToken]);\n  useEffect(() => {\n    if (!search) return setSearchResults([]);\n    if (!accessToken) return;\n    let cancel = false;\n    spotifyApi.searchTracks(search).then(res => {\n      if (cancel) return;\n      setSearchResults(res.body.tracks.items.map(track => {\n        const smallestAlbumImage = track.album.images.reduce((smallest, image) => {\n          if (image.height < smallest.height) return image;\n          return smallest;\n        }, track.album.images[0]);\n        return {\n          artist: track.artists[0].name,\n          title: track.name,\n          uri: track.uri,\n          albumUrl: smallestAlbumImage.url,\n          bigAlbumImage: track.album.images[0].url\n        };\n      }));\n    });\n    return () => cancel = true;\n  }, [search, accessToken]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard__container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Header, {\n          user: user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"\",\n        method: \"get\",\n        className: \"form-example\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-example\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Enter your name: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"search\",\n            placeholder: \"search\",\n            value: search,\n            onChange: e => setSearch(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 3\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: ok\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Dashboard, \"9YJxEu3YzP3BxsnQUYWsJGhZzxA=\", false, function () {\n  return [useAuth];\n});\n\n_c = Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/mansour/Desktop/Perso/spotify-clone/client/src/Dashboard.js"],"names":["React","useState","useEffect","useAuth","SpotifyWebApi","TrackSearchResults","Player","Header","spotifyApi","clientId","Dashboard","code","ok","search","setSearch","user","setUser","searchResults","setSearchResults","accessToken","setAccessToken","getMe","then","data","console","log","body","err","getFeaturedPlaylists","limit","offset","country","locale","timestamp","cancel","searchTracks","res","tracks","items","map","track","smallestAlbumImage","album","images","reduce","smallest","image","height","artist","artists","name","title","uri","albumUrl","url","bigAlbumImage","e","target","value"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport useAuth from './useAuth'\nimport SpotifyWebApi from 'spotify-web-api-node'\nimport TrackSearchResults from './TrackSearchResults';\nimport Player from './Player';\nimport Header from './Header';\n\nimport './Dashboard.scss'\n\n\nconst spotifyApi = new SpotifyWebApi({\n    clientId: '39c957640b2940bc9b1ca9322bf20062'\n})\n\n\nexport default function Dashboard({code, ok, search, setSearch}) {\n\n   \n    const [user, setUser] = useState()\n    const [searchResults, setSearchResults] = useState([])\n    \n    const accessToken = useAuth(code)\n\n    \n\n\n\n    useEffect(() => {\n        if (!accessToken) return\n        spotifyApi.setAccessToken(accessToken);\n\n        spotifyApi.getMe()\n  .then(function(data) {\n    console.log('Some information about the authenticated user', data.body);\n    setUser(data.body)\n  }, function(err) {\n    console.log('Something went wrong!', err);\n  });\n\n  spotifyApi.getFeaturedPlaylists({ limit : 20, offset: 1, country: 'FR', locale: 'fr_FR', timestamp:'2014-10-23T09:00:00' })\n  .then(function(data) {\n    console.log(data.body);\n  }, function(err) {\n    console.log(\"Something went wrong!\", err);\n  });\n\n\n    }, [accessToken])\n\n    useEffect(() => {\n        if(!search) return setSearchResults([])\n        if(!accessToken) return\n\n        let cancel = false\n        spotifyApi.searchTracks(search).then((res) =>{\n            if (cancel) return\n            setSearchResults(res.body.tracks.items.map(track => {\n                const smallestAlbumImage = track.album.images.reduce(\n                    (smallest, image) => {\n                      if (image.height < smallest.height) return image\n                      return smallest\n                    },\n                    track.album.images[0])\n                return {\n                    artist: track.artists[0].name,\n                    title: track.name,\n                    uri: track.uri,\n                    albumUrl: smallestAlbumImage.url,\n                    bigAlbumImage: track.album.images[0].url\n                }\n            }))\n        })\n        return () => cancel = true\n    }, [search, accessToken])\n\n    return (\n        <div className=\"dashboard__container\">\n          <div className=\"dashboard\">\n<div>\n                <Header user={user} />\n            </div>\n\n            \n            <form action=\"\" method=\"get\" className=\"form-example\">\n  <div className=\"form-example\">\n    <label>Enter your name: </label>\n    <input type=\"search\" placeholder=\"search\" value={search} onChange={e => setSearch(e.target.value)}/>\n  </div>\n</form>\n\n<div>\n    {ok}\n</div>\n          </div>\n            \n\n       \n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}