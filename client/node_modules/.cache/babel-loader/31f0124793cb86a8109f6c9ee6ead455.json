{"ast":null,"code":"var _jsxFileName = \"/Users/mansour/Desktop/Perso/spotify-clone/client/src/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport useAuth from './useAuth';\nimport SpotifyWebApi from 'spotify-web-api-node';\nimport TrackSearchResults from './TrackSearchResults';\nimport Player from './Player';\nimport Header from './Header';\nimport './Dashboard.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst spotifyApi = new SpotifyWebApi({\n  clientId: '39c957640b2940bc9b1ca9322bf20062'\n});\nexport default function Dashboard({\n  code\n}) {\n  _s();\n\n  const [search, setSearch] = useState('');\n  const [user, setUser] = useState();\n  const [searchResults, setSearchResults] = useState([]);\n  const [initialResults, setInitialResults] = useState([]);\n  const [playingTrack, setPlayingTrack] = useState();\n  const accessToken = useAuth(code);\n\n  function chooseTrack(track) {\n    setPlayingTrack(track);\n    setSearch('');\n  }\n\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.setAccessToken(accessToken);\n    spotifyApi.getMe().then(function (data) {\n      console.log('Some information about the authenticated user', data.body);\n      setUser(data.body);\n    }, function (err) {\n      console.log('Something went wrong!', err);\n    });\n    spotifyApi.searchTracks('Africa').then(res => {\n      setInitialResults(res.body.tracks.items.map(track => {\n        return {\n          artist: track.artists[0].name,\n          title: track.name,\n          uri: track.uri,\n          albumUrl: track.album.images[1].url,\n          bigAlbumImage: track.album.images[0].url\n        };\n      }));\n    }, function (err) {\n      console.error(err);\n    });\n  }, [accessToken]);\n  useEffect(() => {\n    if (!search) return setSearchResults([]);\n    if (!accessToken) return;\n    let cancel = false;\n    spotifyApi.searchTracks(search).then(res => {\n      if (cancel) return;\n      setSearchResults(res.body.tracks.items.map(track => {\n        return {\n          artist: track.artists[0].name,\n          title: track.name,\n          uri: track.uri,\n          albumUrl: track.album.images[1].url,\n          bigAlbumImage: track.album.images[0].url\n        };\n      }));\n    });\n    return () => cancel = true;\n  }, [search, accessToken]);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Header, {\n            search: search,\n            setSearch: setSearch,\n            user: user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cardsWrap\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cardsWrapInner\",\n            children: /*#__PURE__*/_jsxDEV(Switch, {\n              children: [/*#__PURE__*/_jsxDEV(Route, {\n                exact: true,\n                path: \"/\",\n                children: [searchResults.map(track => /*#__PURE__*/_jsxDEV(TrackSearchResults, {\n                  accessToken: accessToken,\n                  spotifyApi: spotifyApi,\n                  searchResults: searchResults,\n                  track: track,\n                  user: user,\n                  chooseTrack: chooseTrack\n                }, track.uri, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 9\n                }, this)), searchResults.length === 0 && initialResults.map(track => /*#__PURE__*/_jsxDEV(TrackSearchResults, {\n                  accessToken: accessToken,\n                  spotifyApi: spotifyApi,\n                  searchResults: searchResults,\n                  track: track,\n                  user: user,\n                  chooseTrack: chooseTrack\n                }, track.uri, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 9\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: \"/playlist\",\n                children: \"Search\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 1\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Player, {\n        accessToken: accessToken,\n        trackUri: playingTrack === null || playingTrack === void 0 ? void 0 : playingTrack.uri\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Dashboard, \"8ONXmoPDyrtM5zzH01wlr98uf8I=\", false, function () {\n  return [useAuth];\n});\n\n_c = Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/mansour/Desktop/Perso/spotify-clone/client/src/Dashboard.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Switch","Route","useAuth","SpotifyWebApi","TrackSearchResults","Player","Header","spotifyApi","clientId","Dashboard","code","search","setSearch","user","setUser","searchResults","setSearchResults","initialResults","setInitialResults","playingTrack","setPlayingTrack","accessToken","chooseTrack","track","setAccessToken","getMe","then","data","console","log","body","err","searchTracks","res","tracks","items","map","artist","artists","name","title","uri","albumUrl","album","images","url","bigAlbumImage","error","cancel","length"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {  BrowserRouter as Router,Switch, Route } from 'react-router-dom'\nimport useAuth from './useAuth'\nimport SpotifyWebApi from 'spotify-web-api-node'\nimport TrackSearchResults from './TrackSearchResults';\nimport Player from './Player';\nimport Header from './Header';\n\nimport './Dashboard.scss'\n\n\nconst spotifyApi = new SpotifyWebApi({\n    clientId: '39c957640b2940bc9b1ca9322bf20062'\n})\n\n\nexport default function Dashboard({code}) {\n\n    const [search, setSearch] = useState('')\n    const [user, setUser] = useState()\n    const [searchResults, setSearchResults] = useState([])\n    const [initialResults, setInitialResults] = useState([])\n    const [playingTrack, setPlayingTrack] = useState()\n    const accessToken = useAuth(code)\n\n    function chooseTrack(track) {\n        setPlayingTrack(track)\n        setSearch('')\n    }\n\n\n\n    useEffect(() => {\n        if (!accessToken) return\n        spotifyApi.setAccessToken(accessToken);\n\n        spotifyApi.getMe()\n  .then(function(data) {\n    console.log('Some information about the authenticated user', data.body);\n    setUser(data.body)\n  }, function(err) {\n    console.log('Something went wrong!', err);\n  });\n\n  spotifyApi.searchTracks('Africa')\n  .then((res) => {\n    setInitialResults(res.body.tracks.items.map(track => {\n      \n      return {\n          artist: track.artists[0].name,\n          title: track.name,\n          uri: track.uri,\n          albumUrl: track.album.images[1].url,\n          bigAlbumImage: track.album.images[0].url\n      }\n  }))\n  }, function(err) {\n    console.error(err);\n  });\n\n\n    }, [accessToken])\n\n    useEffect(() => {\n        if(!search) return setSearchResults([])\n        if(!accessToken) return\n\n        let cancel = false\n        spotifyApi.searchTracks(search).then((res) =>{\n            if (cancel) return\n            setSearchResults(res.body.tracks.items.map(track => {\n                return {\n                    artist: track.artists[0].name,\n                    title: track.name,\n                    uri: track.uri,\n                    albumUrl: track.album.images[1].url,\n                    bigAlbumImage: track.album.images[0].url\n                }\n            }))\n        })\n        return () => cancel = true\n    }, [search, accessToken])\n\n    return (\n        <Router>\n        <div className=\"dashboard__container\">\n          <div className=\"dashboard\">\n\n              \n<div>\n                <Header search={search} setSearch={setSearch} user={user} />\n            </div>\n\n            \n        \n\n            <div className=\"cardsWrap\">\n      <div className=\"cardsWrapInner\" >\n      <Switch>\n      \n      <Route exact path=\"/\">\n     {searchResults.map(track => (\n        <TrackSearchResults accessToken={accessToken} spotifyApi={spotifyApi} searchResults={searchResults} track={track} user={user} chooseTrack={chooseTrack} key={track.uri} />\n    ))} \n\n    {searchResults.length === 0 && initialResults.map(track => (\n        <TrackSearchResults accessToken={accessToken} spotifyApi={spotifyApi} searchResults={searchResults} track={track} user={user} chooseTrack={chooseTrack} key={track.uri} />\n    )) }\n</Route>\n\n<Route path=\"/playlist\">Search</Route>\n\n</Switch>\n    </div>\n    </div>\n          </div>\n            \n\n       <Player  accessToken={accessToken} trackUri={playingTrack?.uri} />\n        </div>\n        </Router>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}