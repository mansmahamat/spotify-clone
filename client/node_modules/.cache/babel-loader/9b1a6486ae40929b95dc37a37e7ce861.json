{"ast":null,"code":"var _jsxFileName = \"/Users/mansour/Desktop/Perso/spotify-clone/client/src/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport useAuth from './useAuth';\nimport SpotifyWebApi from 'spotify-web-api-node';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst spotifyApi = new SpotifyWebApi({\n  clientId: '39c957640b2940bc9b1ca9322bf20062'\n});\nexport default function Dashboard({\n  code\n}) {\n  _s();\n\n  const [search, setSearch] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const accessToken = useAuth(code);\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.setAccessToken(accessToken);\n  }, [accessToken]);\n  useEffect(() => {\n    if (!search) return setSearchResults([]);\n    if (!accessToken) return;\n    spotifyApi.searchTracks(search).then(res => {\n      res.body.tracks.items.map(track => {\n        const smallestAlbumImage = track.album.images.reduce((smallest, image) => {\n          if (image.height < smallest.height) return image;\n          return smallest;\n        }, track.album.images[0]);\n        return {\n          artist: track.artist[0].name,\n          title: track.name,\n          uri: track.uri,\n          albumUrl: smallestAlbumImage.url\n        };\n      });\n    });\n  }, [search, accessToken]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      method: \"get\",\n      className: \"form-example\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-example\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Enter your name: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\",\n          placeholder: \"search\",\n          value: search,\n          onChange: e => setSearch(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Song\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Bottom\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Dashboard, \"KmAX2naAqv4pE30ZslCZjDoaSTY=\", false, function () {\n  return [useAuth];\n});\n\n_c = Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/mansour/Desktop/Perso/spotify-clone/client/src/Dashboard.js"],"names":["React","useState","useEffect","useAuth","SpotifyWebApi","spotifyApi","clientId","Dashboard","code","search","setSearch","searchResults","setSearchResults","accessToken","setAccessToken","searchTracks","then","res","body","tracks","items","map","track","smallestAlbumImage","album","images","reduce","smallest","image","height","artist","name","title","uri","albumUrl","url","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,aAAP,MAA0B,sBAA1B;;AAEA,MAAMC,UAAU,GAAG,IAAID,aAAJ,CAAkB;AACjCE,EAAAA,QAAQ,EAAE;AADuB,CAAlB,CAAnB;AAKA,eAAe,SAASC,SAAT,CAAmB;AAACC,EAAAA;AAAD,CAAnB,EAA2B;AAAA;;AAEtC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACU,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAMY,WAAW,GAAGV,OAAO,CAACK,IAAD,CAA3B;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACW,WAAL,EAAkB;AAClBR,IAAAA,UAAU,CAACS,cAAX,CAA0BD,WAA1B;AACH,GAHQ,EAGN,CAACA,WAAD,CAHM,CAAT;AAKAX,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAG,CAACO,MAAJ,EAAY,OAAOG,gBAAgB,CAAC,EAAD,CAAvB;AACZ,QAAG,CAACC,WAAJ,EAAiB;AAEjBR,IAAAA,UAAU,CAACU,YAAX,CAAwBN,MAAxB,EAAgCO,IAAhC,CAAsCC,GAAD,IAAQ;AACzCA,MAAAA,GAAG,CAACC,IAAJ,CAASC,MAAT,CAAgBC,KAAhB,CAAsBC,GAAtB,CAA0BC,KAAK,IAAI;AAC/B,cAAMC,kBAAkB,GAAGD,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBC,MAAnB,CACvB,CAACC,QAAD,EAAWC,KAAX,KAAqB;AACnB,cAAIA,KAAK,CAACC,MAAN,GAAeF,QAAQ,CAACE,MAA5B,EAAoC,OAAOD,KAAP;AACpC,iBAAOD,QAAP;AACD,SAJsB,EAKvBL,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmB,CAAnB,CALuB,CAA3B;AAOA,eAAO;AACHK,UAAAA,MAAM,EAAER,KAAK,CAACQ,MAAN,CAAa,CAAb,EAAgBC,IADrB;AAEHC,UAAAA,KAAK,EAAEV,KAAK,CAACS,IAFV;AAGHE,UAAAA,GAAG,EAAEX,KAAK,CAACW,GAHR;AAIHC,UAAAA,QAAQ,EAAEX,kBAAkB,CAACY;AAJ1B,SAAP;AAMH,OAdD;AAeH,KAhBD;AAiBH,GArBQ,EAqBN,CAAC1B,MAAD,EAASI,WAAT,CArBM,CAAT;AAuBA,sBACI;AAAA,4BACI;AAAM,MAAA,MAAM,EAAC,EAAb;AAAgB,MAAA,MAAM,EAAC,KAAvB;AAA6B,MAAA,SAAS,EAAC,cAAvC;AAAA,6BACV;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,WAAW,EAAC,QAAjC;AAA0C,UAAA,KAAK,EAAEJ,MAAjD;AAAyD,UAAA,QAAQ,EAAE2B,CAAC,IAAI1B,SAAS,CAAC0B,CAAC,CAACC,MAAF,CAASC,KAAV;AAAjF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADU;AAAA;AAAA;AAAA;AAAA,YADJ,eAQR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARQ,eASR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATQ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;GA/CuB/B,S;UAIAJ,O;;;KAJAI,S","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport useAuth from './useAuth'\nimport SpotifyWebApi from 'spotify-web-api-node'\n\nconst spotifyApi = new SpotifyWebApi({\n    clientId: '39c957640b2940bc9b1ca9322bf20062'\n})\n\n\nexport default function Dashboard({code}) {\n\n    const [search, setSearch] = useState('')\n    const [searchResults, setSearchResults] = useState([])\n    const accessToken = useAuth(code)\n\n    useEffect(() => {\n        if (!accessToken) return\n        spotifyApi.setAccessToken(accessToken);\n    }, [accessToken])\n\n    useEffect(() => {\n        if(!search) return setSearchResults([])\n        if(!accessToken) return\n\n        spotifyApi.searchTracks(search).then((res) =>{\n            res.body.tracks.items.map(track => {\n                const smallestAlbumImage = track.album.images.reduce(\n                    (smallest, image) => {\n                      if (image.height < smallest.height) return image\n                      return smallest\n                    },\n                    track.album.images[0]\n                  )\n                return {\n                    artist: track.artist[0].name,\n                    title: track.name,\n                    uri: track.uri,\n                    albumUrl: smallestAlbumImage.url\n                }\n            })\n        })\n    }, [search, accessToken])\n\n    return (\n        <div>\n            <form action=\"\" method=\"get\" className=\"form-example\">\n  <div className=\"form-example\">\n    <label>Enter your name: </label>\n    <input type=\"search\" placeholder=\"search\" value={search} onChange={e => setSearch(e.target.value)}/>\n  </div>\n</form>\n\n<div>Song</div>\n<div>Bottom</div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}